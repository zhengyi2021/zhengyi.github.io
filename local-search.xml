<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>信息搜集</title>
    <link href="/2021/02/07/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%E2%80%94%E2%80%94%E6%B8%97%E9%80%8F%E7%9A%84%E6%9C%AC%E8%B4%A8/"/>
    <url>/2021/02/07/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%E2%80%94%E2%80%94%E6%B8%97%E9%80%8F%E7%9A%84%E6%9C%AC%E8%B4%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="信息搜集——渗透的本质"><a href="#信息搜集——渗透的本质" class="headerlink" title="信息搜集——渗透的本质"></a>信息搜集——渗透的本质</h1><ol><li><strong>域名-&gt;IP</strong><br> CDN：内容分发网络<pre><code> 通过邮件（看邮箱头源ip）找真是ip 通过查询域名历史ip，http://toolbar.netcraft.com 超级ping：http://ping.aizhan.com    http://ping.chinaz.com\ 查子域名：因为有的子域名没有使用CDN</code></pre> DNS：<a href="http://site.ip138.com/">http://site.ip138.com</a> </li><li><strong>域名-&gt;whois</strong><br> 邮箱、注册人、公司、电话<br> 备案：<a href="https://www.tianyancha.com/">https://www.tianyancha.com</a></li><li><strong>cms</strong><br> 常见cms：WordPress、Dedecms、Discuz、ThinkPHP<br> 在线工具：<pre><code> BugScaner:https://whatweb.bugscaner.com/look/ 云悉指纹：http://www.yunsee.cn/finger.html WhatWeb:https://whatweb.net</code></pre> 火狐插件：<pre><code> Wapplayzer</code></pre> 服务器类型：<pre><code> TTL值：Windows的TTL值一般是128，Linux是64</code></pre> 网站容器（中间件）<br> 脚本类型<br> 数据库类型（报错、端口）<pre><code> 常见搭配：     ASP和.NET:Microsoft SQL Server     PHP:MySQL、Post     Java:Oracal、MySQL</code></pre></li><li><strong>目录扫描（御剑、爬虫_rad_长亭爬虫、dirsearch）</strong></li><li><strong>子域名</strong><br> SubDomainBrute：<a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a><br> Sublist3r：<a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a><br> Layer（5.0增强版）：<a href="https://pan.baidu.com/s/1Jja4QK5BsAXJ0i0Ax8Ve2Q">https://pan.baidu.com/s/1Jja4QK5BsAXJ0i0Ax8Ve2Q</a>  密码:aup5<br> <a href="https://d.chinacycc.com(大佬推荐的说好用的很,但是收费.)/">https://d.chinacycc.com（大佬推荐的说好用的很，但是收费。）</a><br> 在线工具：<a href="http://z.zcjun.com/">http://z.zcjun.com/</a></li><li><strong>端口扫描</strong></li><li><strong>waf识别</strong><br> 在kail中最常用的WAF扫描工具是wafw00f<br> wafw00f -l<br> #查看该工具能检测那些WAF<br> wafw00f <a href="http://www.baidu.com/">http://www.baidu.com</a><br>github开源工具利用：<br> <a href="https://zhuanlan.zhihu.com/p/53112370">https://zhuanlan.zhihu.com/p/53112370</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网安</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日常摘录</title>
    <link href="/2021/02/07/%E6%97%A5%E5%B8%B8%E6%91%98%E5%BD%95/"/>
    <url>/2021/02/07/%E6%97%A5%E5%B8%B8%E6%91%98%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="日常摘录"><a href="#日常摘录" class="headerlink" title="日常摘录"></a>日常摘录</h1><p><strong>2021年2月4日，天气阴，北方小年</strong></p><ol><li><p>You can be mad as a mad dog at the way things went. You could swear, curse the fates. But when it comes to the end, you have to let go.<br>不顺心的时候。你可以像疯狗那样发狂，你可以破口大骂，诅咒命运。但到头来，还是得放手。<br><em>——《本杰明 巴顿奇事》</em></p></li><li><p>Some of us get dipped in flat, some in satin, some in gloss. But every once in a while you find someone who’s iridescent, and when you do, nothing will ever compare.<br> 有人住高楼，有人在深沟，有人光万丈，有人一身锈。人万千种，浮云莫去求。斯人若彩虹，遇上方知有。<br><em>——《怦然心动》</em></p></li><li><p>你不愿意种花，<br>你说，<br>你不愿看见它一点点凋落。<br>是的，<br>为了避免结束，你避免了一切开始。<br>——<em>顾城 《避免》</em></p></li></ol><hr><p><strong>2021年2月5日，天气多云，南方小年</strong></p><ol start="4"><li><p>Future in deep winter, in early spring, in the summer solstice, in autumn.<br>前程似锦，在冬深，在初春，在夏至，在秋末。</p></li><li><p>你是北大西洋暖流，我是摩尔曼斯克港<br>因为你的到来，我的世界成了不冻港。</p></li><li><p>他的脸红不是因为亚热带的气候，而是因为那天太阳不忠，出卖一九九四年夏末心动。<br><em>——温特梅《太平山顶》</em></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>摘录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Google Hacking</title>
    <link href="/2021/02/07/%E8%B0%B7%E6%AD%8C%E8%AF%AD%E6%B3%95/"/>
    <url>/2021/02/07/%E8%B0%B7%E6%AD%8C%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Google-Hacking"><a href="#Google-Hacking" class="headerlink" title="Google Hacking"></a>Google Hacking</h1><ol><li><strong>site</strong><br> 功能：搜索指定域名的网页内容，可以用来搜索子域名，跟此域名有关的内容<br> 示例： <figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-attribute">site</span>:zhihu.com <span class="hljs-comment">//搜索跟zhihu.com相关的网页</span><br><span class="hljs-string">&quot;sql注入&quot;</span> <span class="hljs-attribute">site</span>:zhihu.com <span class="hljs-comment">//搜索zhihu.com跟sql注入相关的网页</span><br></code></pre></td></tr></table></figure></li><li><strong>filetype</strong><br> 功能：指定搜索文件类型<br> 示例： <figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs groovy"><span class="hljs-string">&quot;web安全&quot;</span> <span class="hljs-attr">filetype:</span>pdf <span class="hljs-comment">//搜索跟web安全相关的pdf文件</span><br><span class="hljs-attr">site:</span>csdn.com <span class="hljs-attr">filetype:</span>pdf <span class="hljs-comment">//搜索csdn网站中的pdf文件</span><br></code></pre></td></tr></table></figure></li><li><strong>inurl</strong><br> 功能：搜索url网址存在特定关键字的网页，可以用来搜寻有注入点的网站<br> 示例： <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">inurl:php?id= <span class="hljs-regexp">//</span>搜索网址中有<span class="hljs-string">&quot;php?id&quot;</span>的网页<br>inurl: <span class="hljs-regexp">/admin/</span> login.php <span class="hljs-regexp">//</span>搜索网址中有<span class="hljs-string">&quot;/admin/login.php&quot;</span>的网页<br></code></pre></td></tr></table></figure></li><li><strong>intitle</strong><br> 功能：搜索标题存在特定关键字的网页<br> 示例： <figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-attribute">intitle</span>:后台登录 <span class="hljs-comment">//搜索网页标题是“后台登录”的相关网页</span><br><span class="hljs-attribute">intitle</span>:后台管理 <span class="hljs-attribute">filetype</span>:php <span class="hljs-comment">//搜索网页标题是后台管理”的php页面</span><br><span class="hljs-attribute">intitle</span>:index of <span class="hljs-string">&quot;keyword&quot;</span> <span class="hljs-comment">//搜索此关键字相关的索引目录信息</span><br><span class="hljs-attribute">intitle</span>:index of <span class="hljs-string">&quot;parent directory&quot;</span> <span class="hljs-comment">//搜索根目录相关的索引目录信息</span><br><span class="hljs-attribute">intitle</span>:index of <span class="hljs-string">&quot;password&quot;</span> <span class="hljs-comment">//搜索密码相关的索引目录信息</span><br></code></pre></td></tr></table></figure></li><li><strong>intext</strong><br> 功能：搜索正文存在特定关键字的网页<br> 示例： <figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-attribute">intext</span>:外部实体注入 <span class="hljs-comment">//搜索外部实体注入相关的页面</span><br><span class="hljs-attribute">intext</span>:Powered by dedecms <span class="hljs-comment">//搜索wordpress制作的博客网址</span><br><span class="hljs-attribute">intext</span>:powered by xxx <span class="hljs-attribute">inurl</span>:login <span class="hljs-comment">//搜索此类网址的后台登录页面</span><br>组合：搜索用Discuz搭建的论坛：<br><span class="hljs-attribute">inurl</span>:php ?id <span class="hljs-attribute">intitle</span>:电影 <span class="hljs-attribute">intext</span>:powered by discuz<br><span class="hljs-attribute">intext</span>:&quot;powered by discuz! <span class="hljs-number">7.2</span>” <span class="hljs-attribute">inurl</span>:faq.php <span class="hljs-attribute">intitle</span>:论坛<br>组合：搜索使用Struts的相关网站：<br><span class="hljs-attribute">intitle</span>: <span class="hljs-string">&quot; Struts Problem Report&quot;</span><br><span class="hljs-attribute">intitle</span>: <span class="hljs-string">&quot;Struts Problem Report&quot;</span> <span class="hljs-attribute">intext</span>: <span class="hljs-string">&quot;development mode is enabled.&quot;</span><br></code></pre></td></tr></table></figure></li><li><strong>符号</strong> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">-keyword <span class="hljs-regexp">//</span>强制结果不要出现此关键字,例如∶电影-黑客<br>*keyword <span class="hljs-regexp">//</span>模糊搜索，强制结果包含此关键字,例如︰电影一个叫*决定*<br><span class="hljs-string">&quot;keyword&quot;</span>  <span class="hljs-regexp">//</span>强制搜索结果出现此关键字,例如∶书籍“web安全<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网安</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web安全面试题</title>
    <link href="/2021/02/07/Web%E5%AE%89%E5%85%A8%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <url>/2021/02/07/Web%E5%AE%89%E5%85%A8%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="Web安全面试题"><a href="#Web安全面试题" class="headerlink" title="Web安全面试题"></a>Web安全面试题</h1><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p><strong>本质</strong><br>攻击者向web页面中插入恶意JavaScript语句。</p><p><strong>分类</strong></p><ul><li>反射性xss</li><li>DOM型xss</li><li>存储型xss</li></ul><p><strong>原理</strong></p><ul><li>反射性xss原理<ol><li>攻击者构造包含恶意JS语句的URL</li><li>受害者访问URL</li><li>网站从URL中获取数据作为响应页面的数据</li><li>受害者浏览器解析执行恶意代码</li></ol></li><li>DOM型xss原理<ol><li>攻击不经过服务器</li><li>利用网页的JS修改HTML</li><li>插入恶意脚本</li></ol></li><li>存储型xss原理<ol><li>攻击者将恶意JS脚本长期保存在服务器端数据库中</li><li>用户一旦访问页面，就会执行恶意脚本</li></ol></li></ul><p><strong>危害</strong></p><ul><li>盗取用户cookie</li><li>盗取账号</li><li>进行未授权的操作</li><li>修改DOM</li><li>刷弹窗广告</li><li>xss蠕虫攻击</li><li>劫持用户，渗透内网</li></ul><p><strong>防御手段</strong></p><ul><li>一切用户输入皆不可信，输出时进行验证</li><li>将HTML元素内容、属性、URL请求参数、CSS值进行编码</li><li>若编码影响业务，则使用白名单规则进行检测和过滤</li><li>使用W3C提出的CSP（内容安全策略），定义域名白名单</li><li>设置Cookie的httpOnly属性</li></ul><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p><strong>本质</strong><br>跨站请求伪造。攻击者诱使用户打开构造的网站，从而获取用户的登录状态向被攻击的网站发起跨站请求，即冒充该用户的身份凭证绕过后台的身份验证进行某些操作。</p><p><strong>防御手段</strong></p><ul><li>服务器端验证请求来源（Referer、Origin）</li><li>使用CSRF Token（随机Token）</li><li>加入二次验证（独立密码、验证码）</li></ul><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><p>Proof Of Concept，“观点证明”。这个短语会在漏洞报告中使用，漏洞报告中的POC则是一段说明或者一个攻击的样例，使得读者能够确认这个漏洞是真实存在的。仅起到验证作用</p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><p>Exploit，”漏洞利用“。意思是一段对漏洞如何利用的详细说明或者一个演示的漏洞攻击代码，可以使得读者完全了解漏洞的机理以及利用的方法。</p><h2 id="常见的CMS"><a href="#常见的CMS" class="headerlink" title="常见的CMS"></a>常见的CMS</h2><ul><li>ThinkPHP</li><li>Weblogic</li><li>dedeCMS</li><li>Struts2</li><li>WordPress</li></ul><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p><strong>原理</strong><br>通过构造特殊的SQL语句作为参数传入web应用程序，进而让服务器解析执行的攻击</p><p><strong>危害</strong></p><ul><li>未授权操作数据库数据</li><li>篡改网页内容</li><li>添加修改系统账号或数据库账号</li><li>网站挂马</li></ul><p><strong>典型攻击手段</strong></p><ol><li>判断是否存在注入</li><li>收集信息，判断数据库类型</li><li>根据注入参数类型构造SQL语句</li><li>猜解数据库名，表名，字段名</li><li>收集数据库信息</li></ol><p><strong>MySQL的information_schema的结构</strong><br>information_schema<br>—schemata<br>    |—schema_name<br>—tables<br>    |—table_schema,table_name<br>—columns<br>    |—table_schema,table_name,column_name</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p><strong>必要条件</strong></p><ol><li>有上传点</li><li>知道木马文件的访问路径</li></ol><h2 id="数据库服务开放且没有更改默认端口，但只能扫描到80端口的原因"><a href="#数据库服务开放且没有更改默认端口，但只能扫描到80端口的原因" class="headerlink" title="数据库服务开放且没有更改默认端口，但只能扫描到80端口的原因"></a>数据库服务开放且没有更改默认端口，但只能扫描到80端口的原因</h2><ol><li>站库分离</li><li>防火墙禁用3306端口</li><li>3306端口仅监听localhost</li></ol><h2 id="拿到webshell之后可以干什么"><a href="#拿到webshell之后可以干什么" class="headerlink" title="拿到webshell之后可以干什么"></a>拿到webshell之后可以干什么</h2><ol><li>找数据库配置文件，搜集用户名密码</li><li>提权</li><li>内网探测</li><li>添加计划任务、修改注册表进行反弹shell</li></ol>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网安</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于CentOS+Nginx+Hexo搭建个人博客</title>
    <link href="/2021/02/07/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/02/07/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="基于CentOS-Nginx-Hexo搭建个人博客"><a href="#基于CentOS-Nginx-Hexo搭建个人博客" class="headerlink" title="基于CentOS+Nginx+Hexo搭建个人博客"></a>基于CentOS+Nginx+Hexo搭建个人博客</h2><h3 id="一、安装git"><a href="#一、安装git" class="headerlink" title="一、安装git"></a>一、安装git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install git<br>git --version<br></code></pre></td></tr></table></figure><h3 id="二、安装npm"><a href="#二、安装npm" class="headerlink" title="二、安装npm"></a>二、安装npm</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /usr/local<br>wget https://npm.taobao.org/mirrors/node/v10.14.1/node-v10.14.1-linux-x64.tar.gz  //下载<br>tar -xvf node-v10.14.1-linux-x64.tar.gz   //解压<br>mv node-v10.14.1-linux-x64 node           //转移<br>vim /etc/profile                          //配置环境变量<br></code></pre></td></tr></table></figure><p>在文件末尾添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">export NODE_HOME=/usr/local/node<br>export PATH=$NODE_HOME/bin:$PATH<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br>node -v<br>npm -v<br></code></pre></td></tr></table></figure><h3 id="三、安装Hexo"><a href="#三、安装Hexo" class="headerlink" title="三、安装Hexo"></a>三、安装Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g hexo-cli<br>cd /root<br>mkdir my_blog<br>hexo init my_blog<br>cd my_blog<br>npm install<br>hexo g<br>hexo server<br></code></pre></td></tr></table></figure><h3 id="四、安装Nginx"><a href="#四、安装Nginx" class="headerlink" title="四、安装Nginx"></a>四、安装Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install nginx<br>systemctl start nginx<br>systemctl enable nginx<br></code></pre></td></tr></table></figure><p>配置Nginx配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/nginx/nginx.conf<br></code></pre></td></tr></table></figure><p>修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">user root;<br>...<br>server&#123;<br>server_name 公网IP;<br>root /root/my_blog/public;<br>&#125;<br>location / &#123;<br>index index.html;<br>&#125;<br></code></pre></td></tr></table></figure><p>重启nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl nginx restart<br></code></pre></td></tr></table></figure><p>至此在浏览器输入公网IP就可以看到生成的博客了</p><h3 id="五、部署到GitHub"><a href="#五、部署到GitHub" class="headerlink" title="五、部署到GitHub"></a>五、部署到GitHub</h3><p>进入GitHub，新建一个Repository<br>仓库的名字，必须是自己的Github账户的用户名.github.io</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /root/my_blog/_config.yml<br></code></pre></td></tr></table></figure><p>添加：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">deploy:<br>type: git<br>repo: git@github.com:xxx/xxx.github.io.git<br>branch: master<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save  //安装git插件<br>cd ~/.ssh  //生成ssh密钥<br>ssh-keygen -t rsa -C &quot;注册GitHub账号的邮箱地址&quot;<br></code></pre></td></tr></table></figure><p>三次回车，复制id_rsa.pub文件内容，进入GitHub主页，个人设置-&gt;SSH and GPG keys-&gt;New SSH key,将内容复制到key里</p><p><strong>git全局配置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name  &quot;github用户名&quot;<br>git config --global user.email &quot;github注册邮箱&quot;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /root/my_blog/<br>hexo g -d<br></code></pre></td></tr></table></figure><p>初步配置完成<br>主题下载可去 <a href="https://hexo.io/themes">https://hexo.io/themes</a></p>]]></content>
    
    
    <categories>
      
      <category>环境部署</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开发环境</tag>
      
      <tag>CentOS</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7.6 快速部署开发环境</title>
    <link href="/2021/02/07/CentOS%E9%83%A8%E7%BD%B2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <url>/2021/02/07/CentOS%E9%83%A8%E7%BD%B2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<h2 id="CentOS-7-6-快速部署开发环境（Apache-MySQL-PHP）"><a href="#CentOS-7-6-快速部署开发环境（Apache-MySQL-PHP）" class="headerlink" title="CentOS 7.6 快速部署开发环境（Apache+MySQL+PHP）"></a>CentOS 7.6 快速部署开发环境（Apache+MySQL+PHP）</h2><h3 id="一、安装Apache服务"><a href="#一、安装Apache服务" class="headerlink" title="一、安装Apache服务"></a>一、安装Apache服务</h3><p>1.安装Apache服务及其扩展包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install httpd httpd-manual mod_ssl mod_perl mod_auth_mysql<br></code></pre></td></tr></table></figure><p>2.启动Apache服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start httpd.service<br></code></pre></td></tr></table></figure><h3 id="二、安装MySQL数据库"><a href="#二、安装MySQL数据库" class="headerlink" title="二、安装MySQL数据库"></a>二、安装MySQL数据库</h3><p>1.下载并安装MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm &amp;&amp; <br>yum -y install mysql57-community-release-el7-10.noarch.rpm &amp;&amp; <br>yum -y install mysql-community-server<br></code></pre></td></tr></table></figure><p>2.启动MySQL数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start mysqld.service<br></code></pre></td></tr></table></figure><p>3.查看MySQL初始密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep &quot;password&quot; /var/log/mysqld.log<br></code></pre></td></tr></table></figure><p>4.登录数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql -uroot -p 上一步的密码<br></code></pre></td></tr></table></figure><p>5.修改MySQL默认密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">set global validate_password_policy&#x3D;0;  &#x2F;&#x2F;修改密码安全策略为低（只校验密码长度，至少8位）。<br>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;12345678&#39;;<br></code></pre></td></tr></table></figure><p>6.授予root用户远程管理权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;12345678&#39;;<br></code></pre></td></tr></table></figure><p>7.输入exit退出数据库</p><h3 id="三、安装PHP"><a href="#三、安装PHP" class="headerlink" title="三、安装PHP"></a>三、安装PHP</h3><p>1.安装PHP环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install php php-mysql gd php-gd gd-devel php-xml php-common php-mbstring php-ldap php-pear php-xmlrpc php-imap<br></code></pre></td></tr></table></figure><p>2.创建PHP测试页面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;&lt;?php phpinfo(); ?&gt;&quot; &gt; /var/www/html/phpinfo.php<br></code></pre></td></tr></table></figure><p>3.重启Apache服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart httpd<br></code></pre></td></tr></table></figure><p>4.打开浏览器，查看phpinfo界面显示成功</p>]]></content>
    
    
    <categories>
      
      <category>环境部署</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开发环境</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux基础</title>
    <link href="/2020/10/05/Linux/"/>
    <url>/2020/10/05/Linux/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h1><h2 id="一、基础命令"><a href="#一、基础命令" class="headerlink" title="一、基础命令"></a>一、基础命令</h2><h3 id="1-ls指令"><a href="#1-ls指令" class="headerlink" title="1.ls指令"></a>1.ls指令</h3><p>ls（list）</p><p><strong>用法1</strong>、<code>#ls</code></p><p>列出当前工作目录下所有文件/文件夹的名称。</p><p><strong>用法2</strong>、<code>#ls 路径</code></p><p>列出指定路径下的所有文件/文件夹的名称。</p><p><strong>用法3</strong>、<code>#ls 选项 路径</code></p><p>在列出指定路径下的文件/文件夹的名称，并已指定的格式显示。</p><p><strong>用法4</strong>、<code>#ls -lh 路径</code></p><p>以列表形式显示指定路径下所有文件/文件夹，并以可读性较高的形式表示文档大小</p><h6 id="关于路径（重要）"><a href="#关于路径（重要）" class="headerlink" title="关于路径（重要）"></a>关于路径（重要）</h6><p>路径可以分为两种：<strong>相对路径</strong>、<strong>绝对路径</strong></p><h5 id="相对路径：相对首先得有一个参照物（一般就是当前的工作路径）；"><a href="#相对路径：相对首先得有一个参照物（一般就是当前的工作路径）；" class="headerlink" title="相对路径：相对首先得有一个参照物（一般就是当前的工作路径）；"></a>相对路径：相对首先得有一个参照物（一般就是当前的工作路径）；</h5><p>相对路径的写法：在相对路径中通常会用到2个字符 “<code>./</code>”【表示当前目录下】、“<code>../</code>”【表示上一级目录下】</p><h5 id="绝对路径：绝对路径不需要参照物，直接从根“-”开始寻找对应路径；"><a href="#绝对路径：绝对路径不需要参照物，直接从根“-”开始寻找对应路径；" class="headerlink" title="绝对路径：绝对路径不需要参照物，直接从根“/”开始寻找对应路径；"></a>绝对路径：绝对路径不需要参照物，直接从根<strong>“/”</strong>开始寻找对应路径；</h5><p><em>#ls -l 路径</em></p><p><em>#ls -la 路径</em></p><p><strong>选项解释：</strong></p><p>-l 表示 list，表示以列表的形式进行展示</p><p>-la 表示显示所有的文件/文件夹（包含了隐藏文件/文件夹）</p><p>（在Linux中隐藏文档一般都是以“.”开头）</p><h3 id="2-pwd指令"><a href="#2-pwd指令" class="headerlink" title="2.pwd指令"></a>2.pwd指令</h3><p>含义：print working directory。</p><p>打印当前工作目录</p><p><strong>用法</strong>：<code>#pwd</code></p><h3 id="3-cd指令"><a href="#3-cd指令" class="headerlink" title="3.cd指令"></a>3.cd指令</h3><p>命令：#cd （change directory。改变目录）</p><p>作用：用于切换当前的工作目录</p><p><strong>用法</strong>：<code>#cd 路径</code></p><p><em>补充：</em></p><p>在Linux中有一个特殊的符号“~”，表示当前用户的家目录’</p><p>切换方式：<code>#cd~\</code></p><h3 id="4-mkdir指令"><a href="#4-mkdir指令" class="headerlink" title="4.mkdir指令"></a>4.mkdir指令</h3><p>指令：mkdir （make director。创建目录）</p><p><strong>用法1</strong>：<code>#mkdir 路径</code>【路径，可以是文件夹名称也可以是包含名称的一个完整路径】</p><p><em>注意：ls列出的结果颜色说明，其中蓝色的名称表示文件夹，黑色的表示文件，绿色的其为拥有所有权限。</em></p><p><strong>用法2</strong>：<code>#mkdir -p 路径</code></p><p>一次性创建多层不存在的目录时，添加-p参数，否则会报错</p><p><strong>用法3</strong>：<code>#mkdir 路径1 路径2 路径3……路径n</code>【表示一次性创建多个目录】</p><h3 id="5、touch指令"><a href="#5、touch指令" class="headerlink" title="5、touch指令"></a>5、touch指令</h3><p>指令：touch</p><p>作用：创建文件</p><p><strong>用法</strong>：<code>#touch 文件路径</code>【路径可以是直接的文件名也可是路径】</p><h3 id="5、cp指令"><a href="#5、cp指令" class="headerlink" title="5、cp指令"></a>5、cp指令</h3><p>指令： cp （copy，复制）</p><p>作用：复制文件/文件夹到指定的位置</p><p><strong>用法</strong>：<code>#cp 被复制的文档路径 文档复制的路径</code></p><p><em>注意：Linux 在复制过程中是可以重新对新位置的文件进行重命名的。但是如果不是必须的需要，则建议保持前后名称一致。</em></p><p><em>例：</em>用cp命令来复制一个文件夹</p><p><em>注意：当使用cp命令进行文件夹复制操作的时候需要添加选项“-r”【-r表示递归复制】，否则目录将被忽略</em></p><h3 id="7、mv指令"><a href="#7、mv指令" class="headerlink" title="7、mv指令"></a>7、mv指令</h3><p>指令：mv （move，移动，剪切）</p><p>作用：移动文档到新的位置</p><p><strong>用法</strong>：<code>#mv 需要移动的文档路径 需要保存的位置路径</code></p><p>确认，移动之后原始的文件还在不在原来的位置</p><h3 id="8、rm指令"><a href="#8、rm指令" class="headerlink" title="8、rm指令"></a>8、rm指令</h3><p>指令：rm （remove，移除、删除）</p><p>作用：移除/删除一个文档</p><p><strong>用法</strong>：<code>#rm 选项 需要移除的文档路径</code></p><p><em>选项</em></p><p><strong>-f</strong>：<em>force，强制删除，不提示是否删除</em></p><p><strong>-r</strong>：<em>表示递归</em></p><p><strong>在删除的时候如果不带选项，会提示是否删除，如果需要确认则输入“y/yes”,否则输入“n/no”，按下回车</strong></p><p><strong>注意：</strong></p><p><strong>1、如果在删除的时候不想频繁的确认，则可以在指令中添加选项”-f“</strong></p><p><strong>2、删除一个目录是需要做地柜删除，并且一般也不需要进行删除确认询问，所以移除目录的时候一般需要使用“-rf”选项</strong></p><p>将 <strong>“*”</strong> 称为通配符，意思是表示任意的字符。例 *<em>“Linux</em>”<strong>，则表示只要文件以</strong>“Linux”**开头，后续字符则不管</p><h3 id="9、vim指令"><a href="#9、vim指令" class="headerlink" title="9、vim指令"></a>9、vim指令</h3><p>指令：vim （vim是一款文本编译器）</p><p><strong>用法</strong>：·#vim 文件的路径·</p><p>作用：打开一个文件（可以不存在，也可以存在）</p><h3 id="10、输出重定向"><a href="#10、输出重定向" class="headerlink" title="10、输出重定向"></a>10、输出重定向</h3><p>一般命令的输出都会显示在终端中，有些时候需要将一些命令的执行结果想要保存到文件中进行后续的分析/统计，则这时候需要使用到的输出定向技术。</p><p><em>&gt;</em>: <strong>覆盖</strong>输出，会覆盖掉原先的文件内容</p><p><em>&gt;&gt;</em>: <strong>追加</strong>输出，不会覆盖原先文件内容,会在原始内容末尾继续输出</p><p><strong>用法：正常执行的指令 “&gt;/&gt;&gt;” 文件的路径</strong></p><p><em>注意：文件可以不存在，不存在则新建</em></p><h3 id="11、cat指令"><a href="#11、cat指令" class="headerlink" title="11、cat指令"></a>11、cat指令</h3><p>作用1：直接打开一个文件</p><p><strong>用法</strong>：<code>#cat 文件的路径</code></p><p>作用2：对多个文件进行合并</p><p><strong>用法</strong>：<code>#cat待合并的文件路径1 待合并的文件路径2……待合并的文件路径n &gt; 文件路径</code></p><h2 id="二、进阶指令（重点）"><a href="#二、进阶指令（重点）" class="headerlink" title="二、进阶指令（重点）"></a>二、进阶指令（重点）</h2><h3 id="1-df-指令"><a href="#1-df-指令" class="headerlink" title="1. df 指令"></a>1. df 指令</h3><p>作用：查看磁盘的空间<br>语法：<code>#df -h</code>表示以可读性较高的形式展示大小</p><h3 id="2-free-指令"><a href="#2-free-指令" class="headerlink" title="2. free 指令"></a>2. free 指令</h3><p>作用：查看内存使用情况<br>语法：<code>#free -m</code> <em>-m 表示以<strong>mb</strong>为单位查看</em></p><p>剩余的真实可以用的内存为1665mb。<br>Swap：用于临时内存，当系统真实内存不够用时可以临时使用磁盘空间来充当内存。</p><h3 id="3-head-指令"><a href="#3-head-指令" class="headerlink" title="3. head 指令"></a>3. head 指令</h3><p>作用：查看一个文件的前n行，如果不指定n，则默认显示前10行。<br>语法：<code>#head -n 文件路径</code> <em>【n表示数字】</em></p><h3 id="4-tail-指令"><a href="#4-tail-指令" class="headerlink" title="4. tail 指令"></a>4. tail 指令</h3><p>作用 1：查看一个文件的后n行，如果不指定n，则默认显示后10行。<br>语法：<code>#tail -n 文件路径</code> <em>【n表示数字】</em></p><p>作用 2：可以通过 tail 指令来查看一个文件的动态变化内容【<strong>变化的内容不能是用户手动增加的</strong>】<br>语法：<code>#tail -f 文件路径</code></p><p>该命令一般用于查看系统的日志比较多。</p><h3 id="5-less-指令"><a href="#5-less-指令" class="headerlink" title="5. less 指令"></a>5. less 指令</h3><p>作用：查看文件，以较少的内容进行输出，按下辅助功能键（数字+回车、空格键+上下方向键）查看更多<br>语法：<code>#less 需要查看的文件路径</code></p><h3 id="6-wc-指令"><a href="#6-wc-指令" class="headerlink" title="6. wc 指令"></a>6. wc 指令</h3><p>作用：统计文件内容信息（包含行数、单词数、字节数）<br>语法：<code>#wc -lwc 需要统计的文件路径</code><br>-l：表示lines，行数<br>-w：表示words，单词数 <strong>依照空格来判断单词数量</strong><br>-c：表示bytes，字节数</p><h3 id="7-date-指令（重点）"><a href="#7-date-指令（重点）" class="headerlink" title="7. date 指令（重点）"></a><strong>7. date 指令（重点）</strong></h3><p>作用：表示操作时间日期（<strong>读取</strong>、设置）<br>语法 1：<code>#date</code> 输出的形式：2020年 2月 17日 星期一 09:43:00</p><p>语法 2：<code>#date +%F</code>（等价于<code>#date “+%Y-%m-%d”</code>）输出的形式：2020-02-17</p><p>语法 3：<code>#date “+%F %T”</code> （等价于<code>date “+%Y-%m-%d %H:%M:%S”</code>）<em>引号表示让”年月日时分秒“成为一个不可分割的整体</em> 输出的形式：2020-02-17 09:48:00</p><p>语法 4：获取之前或之后的某个时间（备份）<code>#date -d “-1 day” “+%Y-%m-%d %H:%M:%S”</code><br>符号的可选值：+（之后）或者 -（之前）<br>单位的可选值：day（天）、month（月）、year（年）</p><h3 id="8-cal-指令"><a href="#8-cal-指令" class="headerlink" title="8. cal 指令"></a><strong>8. cal 指令</strong></h3><p>作用：用来操作日历的<br>语法 1：<code>#cal</code> 等价于<code>#cal -1</code> 直接输出当前月份的日历<br>语法 2：<code>#cal -3</code> 表示输出上一个月+本月+下个月份的日历<br>语法 3：<code>#cal -y 年份</code> 表示输出某一年份的日历</p><h3 id="9-clear-ctrl-L-指令"><a href="#9-clear-ctrl-L-指令" class="headerlink" title="9. clear/ctrl + L 指令"></a>9. clear/ctrl + L 指令</h3><p>作用：清楚终端中已经存在的命令和结果（信息）。<br>语法：<code>#clear</code> 或者快捷键：ctrl+L</p><p>需要注意的是，该命令并不是真的清除了之前的信息，而是把之前的信息的隐藏到了最上面，通过滚动条继续查看以前的信息</p><h3 id="10-管道（重要）"><a href="#10-管道（重要）" class="headerlink" title="10. 管道（重要）"></a><strong>10. 管道（重要）</strong></h3><p><strong>管道符：|</strong><br>作用：管道一般可以用于“<strong>过滤</strong>”，“特殊用法”，“扩展处理”。前一个命令的输出作为后一个命令的输入。<br>语法：管道不能单独使用，必须需要配合前面的指令来一起使用，其作用主要是辅助作用</p><p>(1). 过滤案例（100%使用）：需要通过管道来查询出根目录下包含“y”字母的文档名称<br><code>#ls /|grep y**</code><br>针对上面这个命令说明：<br><em>以管道作为分解线，前面的命令有个输出，后面需要先输入再过滤，最后再输出，通俗的讲就是管道前面的输出就是后面指令的输入；</em><br><code>grep 指令：主要用于过滤</code></p><p>(2). 特殊用法案例：通过管道的操作方法来实现 less 的等价效果（了解）<br>之前通过 less 查看一个文件，可以 <code>#less 路径</code><br>现在通过管道还可以这么：<code>#cat 路径|less</code></p><p>(3). 扩展处理：请使用学过的命令，来统计某个目录下文档的总个数<br><code>#ls /|wc -l</code></p><p>练习：输出 /etc 目录下的文件数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ls /etc | wc -w<br></code></pre></td></tr></table></figure><h2 id="三、目录和文件管理"><a href="#三、目录和文件管理" class="headerlink" title="三、目录和文件管理"></a>三、目录和文件管理</h2><h3 id="第1节-Linux文件类型"><a href="#第1节-Linux文件类型" class="headerlink" title="第1节 Linux文件类型"></a>第1节 Linux文件类型</h3><ul><li><p>普通文件：-</p></li><li><p>目录文件：d</p></li><li><p>设备文件</p><ul><li>块设备文件：b</li><li>字符设备文件：c</li></ul></li><li><p>管道文件：p</p></li><li><p>链接文件 </p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ls -l //查看文件类型<br></code></pre></td></tr></table></figure><h3 id="第2节-Linux目录结构"><a href="#第2节-Linux目录结构" class="headerlink" title="第2节 Linux目录结构"></a>第2节 Linux目录结构</h3><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td>/home</td><td>主目录</td></tr><tr><td>/root</td><td>root用户的主目录</td></tr><tr><td>/bin</td><td>包含常用的命令文件，不能包含子目录</td></tr><tr><td>/sbin</td><td>系统管理员和root用户的命令文件</td></tr><tr><td>/dev</td><td>设备文件</td></tr><tr><td>/lib</td><td>共享文件、内核模块文件v</td></tr><tr><td>/tmp</td><td>临时文件</td></tr><tr><td>/mnt</td><td>挂载目录</td></tr><tr><td>/boot</td><td>内核文件和引导装载程序文件</td></tr><tr><td>/etc</td><td>配置文件</td></tr><tr><td>/usr</td><td>程序和数据</td></tr><tr><td>/proc</td><td>虚拟的文件系统，不存在磁盘上</td></tr></tbody></table><h3 id="第3节-文件和目录操作"><a href="#第3节-文件和目录操作" class="headerlink" title="第3节 文件和目录操作"></a>第3节 文件和目录操作</h3><p>见前Linux基础命令及进阶指令</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OverTheWire:Natas 解题思路（一）</title>
    <link href="/2020/05/15/OverTheWire_Natas/"/>
    <url>/2020/05/15/OverTheWire_Natas/</url>
    
    <content type="html"><![CDATA[<h1 id="OverTheWire-Natas-解题思路（Level-0-Level-6）"><a href="#OverTheWire-Natas-解题思路（Level-0-Level-6）" class="headerlink" title="OverTheWire:Natas 解题思路（Level 0-Level 6）"></a>OverTheWire:Natas 解题思路（Level 0-Level 6）</h1><h2 id="Level-0"><a href="#Level-0" class="headerlink" title="Level 0"></a>Level 0</h2><p>Username: natas0<br>Password: natas0<br>URL: <a href="http://natas0.natas.labs.overthewire.org/">http://natas0.natas.labs.overthewire.org</a></p><p>用户名和密码登录之后，网页显示“You can find the password for the next level on this page. ”。F12查看源码，网页源码包含了通关密钥</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- The password for natas1 is gtVrDuiDfck831PqWsLEZy5gyDz1clto --&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Level-0-→-Level-1"><a href="#Level-0-→-Level-1" class="headerlink" title="Level 0 → Level 1"></a>Level 0 → Level 1</h2><p>Username: natas1<br>URL: <a href="http://natas1.natas.labs.overthewire.org/">http://natas1.natas.labs.overthewire.org</a></p><p>用户名和密码登录之后，网页显示”<br>You can find the password for the next level on this page, but rightclicking has been blocked! “<br>鼠标右键被禁用，可以用F12查看源码，网页源码包含了通关密钥</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- The password for natas2 is ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi   --&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Level-1-→-Level-2"><a href="#Level-1-→-Level-2" class="headerlink" title="Level 1 → Level 2"></a>Level 1 → Level 2</h2><p>Username: natas2<br>URL: <a href="http://natas2.natas.labs.overthewire.org/">http://natas2.natas.labs.overthewire.org</a><br>用户名和密码登录之后，网页显示”There is nothing on this page “,F12查看源码，发现源码里面有一段</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;files/pixel.png&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>说明当前目录下可以访问到files目录，直接在url的路径上加上files，能找到相同目录下还有一个users.txt，这个文件可以直接通过链接访问</p><p>得到natas3密码：sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14</p><h2 id="Level-2-→-Level-3"><a href="#Level-2-→-Level-3" class="headerlink" title="Level 2 → Level 3"></a>Level 2 → Level 3</h2><p>Username: natas3<br>URL: <a href="http://natas3.natas.labs.overthewire.org/">http://natas3.natas.labs.overthewire.org</a></p><p>源码说搜索引擎抓取不到，所以应该存在robots.txt</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>There is nothing on this page<br><span class="hljs-comment">&lt;!-- No more information leaks!! Not even Google will find it this time... --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>访问/robots.txt 发现有个/s3cr3t/目录<br>访问这个目录可以看到users.txt, 这个文本文档里面存储着<br>natas4:Z9tkRkWmpt9Qr7XrR5jWRkgOU901swEZ</p><h2 id="Level-3-→-Level-4"><a href="#Level-3-→-Level-4" class="headerlink" title="Level 3 → Level 4"></a>Level 3 → Level 4</h2><p>Username: natas4<br>URL: [<a href="http://natas4.natas.labs.overthewire.org/">http://natas4.natas.labs.overthewire.org</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>Access disallowed. You are visiting from &quot;http://natas4.natas.labs.overthewire.org/index.php&quot; while authorized users should come only from &quot;http://natas5.natas.labs.overthewire.org/&quot;<br><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;viewsource&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;index.php&quot;</span>&gt;</span>Refresh page<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>页面提示我们应该从”<a href="http://natas5.natas.labs.overthewire.org/%E2%80%9C">http://natas5.natas.labs.overthewire.org/“</a>, 过去， 通过natas4过去不行，这里我们就需要修改Referer, 用burpsuite修改referer字段<br>Referer: <a href="http://natas5.natas.labs.overthewire.org/">http://natas5.natas.labs.overthewire.org/</a><br>得到回应</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br><br>Access granted. The password for natas5 is iX6IOfmpN7AYOQGPwtn3fXpbaJVJcHfq<br><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;viewsource&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;index.php&quot;</span>&gt;</span>Refresh page<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Level-4-→-Level-5"><a href="#Level-4-→-Level-5" class="headerlink" title="Level 4 → Level 5"></a>Level 4 → Level 5</h2><p>Username: natas5<br>URL: <a href="http://natas5.natas.labs.overthewire.org/">http://natas5.natas.labs.overthewire.org</a></p><p>这题登录上去，得到Access disallowed. You are not logged in，源码无从入手，我们分析一下发送的报文，BURP抓包，发现了cookie字段有一个loggedin=0 ，登录状态应该也是用这一位判断，修改cookie字段的loggedin=1发送，就能得到回应。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>Access granted. The password for natas6 is aGoY4q2Dc6MgDq4oL4YtoKtyAg9PeHa1<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Level-5-→-Level-6"><a href="#Level-5-→-Level-6" class="headerlink" title="Level 5 → Level 6"></a>Level 5 → Level 6</h2><p>Username: natas6<br>URL: <a href="http://natas6.natas.labs.overthewire.org/">http://natas6.natas.labs.overthewire.org</a></p><p>view sourcecode找到一段很重要的判断函数，如果提交的表单的字段和$secret一样就可以得到授权，看到可以文件”includes/secret.inc“</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">&lt;?<br>include &quot;includes/secret.inc&quot;;<br><br>    if(array_key_exists(&quot;submit&quot;, $_POST)) &#123;<br>        if($secret == $_POST[&#x27;secret&#x27;]) &#123;<br>        print &quot;Access granted. The password for natas7 is &lt;censored&gt;&quot;;<br>    &#125; else &#123;<br>        print &quot;Wrong secret&quot;;<br>    &#125;<br>    &#125;<br>?&gt;<br></code></pre></td></tr></table></figure><p>burp访问”includes/secret.inc“可以得到response</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">HTTP/1.1 200 OK<br>Date: Fri, 01 Mar 2019 09:11:57 GMT<br>Server: Apache/2.4.10 (Debian)<br>Last-Modified: Thu, 15 Dec 2016 21:07:45 GMT<br>ETag: &quot;27-543b8d8450a40&quot;<br>Accept-Ranges: bytes<br>Content-Length: 39<br>Connection: close<br><br>&lt;?<br><span class="hljs-meta">$</span><span class="bash">secret = <span class="hljs-string">&quot;FOEIUWGHFEEUHOFUOIU&quot;</span>;</span><br>?&gt;<br></code></pre></td></tr></table></figure><p>将得到的$secret = “FOEIUWGHFEEUHOFUOIU”;提交可以得到回应：<br>Access granted. The password for natas7 is 7z3hEENjQtflzgnT29q7wAvMNfZdh0i9</p>]]></content>
    
    
    <categories>
      
      <category>靶场</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>OverTheWire-Bandit 解题思路（二）</title>
    <link href="/2020/04/15/OverTheWire-Bandit_2/"/>
    <url>/2020/04/15/OverTheWire-Bandit_2/</url>
    
    <content type="html"><![CDATA[<h1 id="OverTheWire-Bandit-（Level-6-Level-12）"><a href="#OverTheWire-Bandit-（Level-6-Level-12）" class="headerlink" title="OverTheWire-Bandit （Level 6-Level 12）"></a>OverTheWire-Bandit （Level 6-Level 12）</h1><h2 id="Level-6→-Level-7"><a href="#Level-6→-Level-7" class="headerlink" title="Level 6→ Level 7"></a>Level 6→ Level 7</h2><p>用账号：bandit6，密码：DXjZPULLxYr17uwoI01bNLQbtFemEgo7 进入本关</p><p>描述：下一级别的密码存储在服务器的某个位置，并具有以下所有属性：由用户 bandit7 拥有，由groupitit6 拥有，大小为 33 个字节</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit6@bandit:~$ find / -group bandit6 -user bandit7 -size 33c 2&gt;/dev/null<br>/var/lib/dpkg/info/bandit7.password<br>bandit6@bandit:~$ cat /var/lib/dpkg/info/bandit7.password      <br>HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs<br></code></pre></td></tr></table></figure><p>“/” linux 根目录,从最顶层开始查找，”2&gt;/dev/null”中”2″ 表示错误输出，”&gt;” 是重定向符号表示把信息送到哪里，”/dev/null” 是 Linux 黑洞.</p><p>密码：HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs</p><h3 id="Level-7→-Level-8"><a href="#Level-7→-Level-8" class="headerlink" title="Level 7→ Level 8"></a>Level 7→ Level 8</h3><p>用账号：bandit7，密码：HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs 进入本关</p><p>描述：下一级的密码存储文件 data.txt 中， “millionth” 的下一个单词。</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit7@bandit:~$ ls<br>data.txt<br>bandit7@bandit:~$ grep millionth data.txt <br>millionth    cvX2JJa4CFALtqS87jk27qwqGhBM9plV<br></code></pre></td></tr></table></figure><p>命令讲解 “grep match_pattern file_name” ,在文件中搜索一个单词，命令会返回一个包含 “match_pattern” 的文本行<br>密码：cvX2JJa4CFALtqS87jk27qwqGhBM9plV</p><h3 id="Level-8→-Level-9"><a href="#Level-8→-Level-9" class="headerlink" title="Level 8→ Level 9"></a>Level 8→ Level 9</h3><p>用账号：bandit8，密码：cvX2JJa4CFALtqS87jk27qwqGhBM9plV 进入本关</p><p>描述：下一级别的密码存储在文件 data.txt 中，并且是仅出现一次的唯一文本行</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit8@bandit:~$ ls<br>data.txt<br>bandit8@bandit:~$ sort data.txt | uniq -u<br>UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUh<br></code></pre></td></tr></table></figure><p>sort 命令用于将文本文件内容加以排序，可针对文本文件的内容，以行为单位来排序。”uniq -u” 是上下相邻两行对比得到是否为单一行。</p><p>密码：UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR</p><h3 id="Level-9→-Level-10"><a href="#Level-9→-Level-10" class="headerlink" title="Level 9→ Level 10"></a>Level 9→ Level 10</h3><p>用账号：bandit9，密码：UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR 进入本关</p><p>描述：下一级别的密码存储在文件 data.txt 中的少数人类可读字符串之一中，以几个 ‘=’ 字符开始。</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit9@bandit:~$ ls<br>data.txt<br>bandit9@bandit:~$ strings data.txt | grep ==<br>========== theP`<br>========== password<br>L========== isA<br>========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk<br></code></pre></td></tr></table></figure><p>strings 是在文件中查找可打印字符串并输出长度为 4 个或更多的字符串，遇到换行或空字符结束，用 grep 命令筛选 含有 “==” 的字符串。</p><p>密码：truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk</p><h3 id="Level-10→-Level-11"><a href="#Level-10→-Level-11" class="headerlink" title="Level 10→ Level 11"></a>Level 10→ Level 11</h3><p>用账号：bandit10，密码：truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk 进入本关</p><p>描述：下一级的密码存储在包含 base64 编码数据的文件 data.txt 中</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit10@bandit:~$ ls<br>data.txt<br>bandit10@bandit:~$ cat data.txt <br>VGhlIHBhc3N3b3JkIGlzIElGdWt3S0dzRlc4TU9xM0lSRnFyeEUxaHhUTkViVVBSCg==<br>bandit10@bandit:~$ base64 -d data.txt <br>The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR<br></code></pre></td></tr></table></figure><p>base64 编码了数据，解码就好了</p><p>密码：IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR</p><h3 id="Level-11→-Level-12"><a href="#Level-11→-Level-12" class="headerlink" title="Level 11→ Level 12"></a>Level 11→ Level 12</h3><p>用账号：bandit11，密码：IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR 进入本关</p><p>描述：下一级的密码存储在文件 data.txt 中，其中所有小写（az）和大写（AZ）字母已被旋转了 13 个位置</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit11@bandit:~$ ls<br>data.txt<br>bandit11@bandit:~$ cat data.txt <br>Gur cnffjbeq vf 5Gr8L4qetPEsPk8htqjhRK8XSP6x2RHh<br>bandit11@bandit:~$ cat data.txt | tr &#x27;a-zA-Z&#x27; &#x27;n-za-mN-ZA-M&#x27;<br>The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu<br></code></pre></td></tr></table></figure><p>tr 命令，参数为两个字符集，把第一个字符集中的字符替换为第二个字符集中的对应字符。题目中说旋转了 13 个位置，相当于 26 个字母前十三个和后十三个换了个位置。按照这样的对应关系，调整给出的字符集。</p><p>密码：5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu</p>]]></content>
    
    
    <categories>
      
      <category>靶场</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>偏移注入常见问题汇总</title>
    <link href="/2020/03/15/sql_question/"/>
    <url>/2020/03/15/sql_question/</url>
    
    <content type="html"><![CDATA[<h1 id="偏移注入常见问题汇总"><a href="#偏移注入常见问题汇总" class="headerlink" title="偏移注入常见问题汇总"></a>偏移注入常见问题汇总</h1><h2 id="1-Access偏移注入使用场景"><a href="#1-Access偏移注入使用场景" class="headerlink" title="1. Access偏移注入使用场景"></a>1. Access偏移注入使用场景</h2><p>一些无法查询的列名，比如权限不足的知道表名却不知道字段 使用偏移查询主要查询字段及内容等</p><h2 id="2-偏移注入是否仅用于Access"><a href="#2-偏移注入是否仅用于Access" class="headerlink" title="2. 偏移注入是否仅用于Access"></a>2. 偏移注入是否仅用于Access</h2><p>不是，mysql也可以使用偏移注入</p><h2 id="3-为什么可以cookie注入"><a href="#3-为什么可以cookie注入" class="headerlink" title="3. 为什么可以cookie注入"></a>3. 为什么可以cookie注入</h2><p>因为在这里接受参数的时候使用了REQUEST，他可以接受get 和POST 和 COOKIE的传参</p><h2 id="4-为什么cookie注入可以绕过验证"><a href="#4-为什么cookie注入可以绕过验证" class="headerlink" title="4. 为什么cookie注入可以绕过验证"></a>4. 为什么cookie注入可以绕过验证</h2><p>因为早期网站防护只检测GET和POST传参，没有检测COOKIE</p><h2 id="5-Cookie注入常见吗？"><a href="#5-Cookie注入常见吗？" class="headerlink" title="5. Cookie注入常见吗？"></a>5. Cookie注入常见吗？</h2><p>老一点的ASP网站常见，PHP看版本，因为高于5.2以上的php版本他的$_REQUEST将不再接受cookie传参</p><h2 id="6-cookie注入时为什么要删除URL内的id传参"><a href="#6-cookie注入时为什么要删除URL内的id传参" class="headerlink" title="6. cookie注入时为什么要删除URL内的id传参"></a>6. cookie注入时为什么要删除URL内的id传参</h2><p>因为它传参进去会有一个输出，cookie里我们也传参了一个id数值，他会优先接受GET的传参</p><h2 id="7-“-”的作用"><a href="#7-“-”的作用" class="headerlink" title="7. “.*”的作用"></a>7. “.*”的作用</h2><p>用于代替表内全部字段，在不能用系统自带库查字段名时</p><h2 id="8-与正则表达式中的-有什么不同"><a href="#8-与正则表达式中的-有什么不同" class="headerlink" title="8. 与正则表达式中的*有什么不同"></a>8. 与正则表达式中的*有什么不同</h2><p>正则中的<em>代表匹配前面的0或无数次,而这里的</em>指定表中所有的字段，admin.*是指admin表中所有的字段</p><h2 id="9-偏移注释时联合查询后的一张表为什么要小于前一张表"><a href="#9-偏移注释时联合查询后的一张表为什么要小于前一张表" class="headerlink" title="9. 偏移注释时联合查询后的一张表为什么要小于前一张表"></a>9. 偏移注释时联合查询后的一张表为什么要小于前一张表</h2><p>联合查询必须要满足一个条件，就是前面的查询和后面的查询字段数必须相等，因为前面那张表的查询字段数是固定的，后面那张我们控制，但是当你使用admin.* 代表admin整个表的字段，如果admin表字段比前面那个表多，就不符合联合查询</p><h2 id="10-为什么flag的输出点会在图片里出现"><a href="#10-为什么flag的输出点会在图片里出现" class="headerlink" title="10. 为什么flag的输出点会在图片里出现"></a>10. 为什么flag的输出点会在图片里出现</h2><p>数据库里面他保存了图片的链接地址，然后拼凑到了页面上</p><h2 id="11-为什么没用到information-schema"><a href="#11-为什么没用到information-schema" class="headerlink" title="11. 为什么没用到information_schema"></a>11. 为什么没用到information_schema</h2><p>access数据库里没有系统自带表，只能猜</p><h2 id="12-前面的sql应该报错而不显示"><a href="#12-前面的sql应该报错而不显示" class="headerlink" title="12. 前面的sql应该报错而不显示"></a>12. 前面的sql应该报错而不显示</h2><p>虽然不显示但还是占了输出位，只显示了正确的</p><p>能查到所有数据吗</p><p>看具体环境，有的时候正好能全部查出，有的时候只能查出部分</p><h2 id="13-union-联合查询前为什么要加and-1-2"><a href="#13-union-联合查询前为什么要加and-1-2" class="headerlink" title="13. union 联合查询前为什么要加and 1=2"></a>13. union 联合查询前为什么要加and 1=2</h2><p>因为显示的时候有时只能返回第一行的数据，加上and 1=2后使前面的语句报错，前一行就没用输出了，从而显示后一条语句</p><h2 id="14-为什么偏移注入要用1-2-admin-呢"><a href="#14-为什么偏移注入要用1-2-admin-呢" class="headerlink" title="14.为什么偏移注入要用1,2,admin.*呢"></a>14.为什么偏移注入要用1,2,admin.*呢</h2><p>因为我们不知道这个表中的具体字段名，xxx.*代表所有字段，把表二所有字段字段都显示出来，然后再来找那个具体的字段</p><h2 id="15-能不能直接写"><a href="#15-能不能直接写" class="headerlink" title="15. 能不能直接写*"></a>15. 能不能直接写*</h2><p>不能，直接写*的话不知道你这个代表了是那个表</p><h2 id="16-xxx-可以代表任意字段及数量吗"><a href="#16-xxx-可以代表任意字段及数量吗" class="headerlink" title="16. xxx.*可以代表任意字段及数量吗"></a>16. xxx.*可以代表任意字段及数量吗</h2><p>代表XXX表的所有字段</p><h2 id="17-那么可以用select-from代替select-1-admin-吗？"><a href="#17-那么可以用select-from代替select-1-admin-吗？" class="headerlink" title="17. 那么可以用select * from代替select 1,admin.*吗？"></a>17. 那么可以用select * from代替select 1,admin.*吗？</h2><p>不能，直接加*的情况下，我们无法控制Union后的字段输出个数，union是在两个表的字段数要相同的情况下才可以成立的,否则联合查询不能执行</p><h2 id="18-不能查information-schema怎么得知表名"><a href="#18-不能查information-schema怎么得知表名" class="headerlink" title="18. 不能查information_schema怎么得知表名"></a>18. 不能查information_schema怎么得知表名</h2><p>可以靠爆破和尝试一些常用表名(例如：news、admin、user)</p><h2 id="19-整个SQL语句都能操控吗"><a href="#19-整个SQL语句都能操控吗" class="headerlink" title="19. 整个SQL语句都能操控吗"></a>19. 整个SQL语句都能操控吗</h2><p>不能，我们只能在原有的select查询的基础上加上联合查询的语句，我们不能控制他之前的查询</p><h2 id="20-admin-代表一个任意字段？"><a href="#20-admin-代表一个任意字段？" class="headerlink" title="20. admin.* 代表一个任意字段？"></a>20. admin.* 代表一个任意字段？</h2><p>admin.*代表了所有字段</p><h2 id="21-and-exist-select-from-admin-类似的盲注的语句能否使用"><a href="#21-and-exist-select-from-admin-类似的盲注的语句能否使用" class="headerlink" title="21. and exist(select * from admin) 类似的盲注的语句能否使用"></a>21. and exist(select * from admin) 类似的盲注的语句能否使用</h2><p>这里主要是涉及偏移注入，那一条的确是access的盲注语句，但在现在的情况下并不适用，因为你不知道字段名，无法盲注</p><h2 id="22-为什么access数据库union-联合查询在查字段后要加-from"><a href="#22-为什么access数据库union-联合查询在查字段后要加-from" class="headerlink" title="22. 为什么access数据库union 联合查询在查字段后要加 from"></a>22. 为什么access数据库union 联合查询在查字段后要加 from</h2><p>因为access数据库在报显示位是要确定一个表名</p><h2 id="23-admin是当前表吗"><a href="#23-admin是当前表吗" class="headerlink" title="23. admin是当前表吗"></a>23. admin是当前表吗</h2><p>不是，只是指定了admin表</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网安</tag>
      
      <tag>注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>表单验证常见问题汇总</title>
    <link href="/2020/03/11/sql_question_2/"/>
    <url>/2020/03/11/sql_question_2/</url>
    
    <content type="html"><![CDATA[<h1 id="表单验证常见问题汇总"><a href="#表单验证常见问题汇总" class="headerlink" title="表单验证常见问题汇总"></a>表单验证常见问题汇总</h1><h2 id="1-表单验证的基本流程是什么？"><a href="#1-表单验证的基本流程是什么？" class="headerlink" title="1. 表单验证的基本流程是什么？"></a>1. 表单验证的基本流程是什么？</h2><p>在登陆页面提交信息，提交到后端数据库验证，然后返回信息到其他或原有页面</p><h2 id="2-验证页面和数据库连接页面可以写在同一文件吗？"><a href="#2-验证页面和数据库连接页面可以写在同一文件吗？" class="headerlink" title="2. 验证页面和数据库连接页面可以写在同一文件吗？"></a>2. 验证页面和数据库连接页面可以写在同一文件吗？</h2><p>可以写在同一个文件中</p><h2 id="3-连接数据库函数是什么？"><a href="#3-连接数据库函数是什么？" class="headerlink" title="3. 连接数据库函数是什么？"></a>3. 连接数据库函数是什么？</h2><p>mysqli_connect(地址,用户名,密码)</p><h2 id="4-POST提交方式和GET方式有什么区别"><a href="#4-POST提交方式和GET方式有什么区别" class="headerlink" title="4. POST提交方式和GET方式有什么区别"></a>4. POST提交方式和GET方式有什么区别</h2><p>GET会通过url传参，POST的传递参数量可以比GET多得多</p><h2 id="5-如何对输入的字符如何进行过滤"><a href="#5-如何对输入的字符如何进行过滤" class="headerlink" title="5. 如何对输入的字符如何进行过滤"></a>5. 如何对输入的字符如何进行过滤</h2><p>用正则表达式来进行过滤</p><h2 id="6-mysql-select-db的作用"><a href="#6-mysql-select-db的作用" class="headerlink" title="6. mysql_select_db的作用"></a>6. mysql_select_db的作用</h2><p>mysql_select_db() 函数设置活动的 MySQL 数据库，访问数据库</p><h2 id="7-表单填入的信息如何提交到后端的处理php中"><a href="#7-表单填入的信息如何提交到后端的处理php中" class="headerlink" title="7. 表单填入的信息如何提交到后端的处理php中"></a>7. 表单填入的信息如何提交到后端的处理php中</h2><p>通过form表单提交</p><h2 id="8-如果表单中加入校验输入的信息错误怎么处理"><a href="#8-如果表单中加入校验输入的信息错误怎么处理" class="headerlink" title="8. 如果表单中加入校验输入的信息错误怎么处理"></a>8. 如果表单中加入校验输入的信息错误怎么处理</h2><p>可以用JS书写弹窗提示,或者在页面输出错误信息</p><h2 id="9-后端php是怎么和数据库交互的"><a href="#9-后端php是怎么和数据库交互的" class="headerlink" title="9. 后端php是怎么和数据库交互的"></a>9. 后端php是怎么和数据库交互的</h2><p>通过Mysqli扩展进行交互，课程中会细讲</p><h2 id="10-表单标签中可以控制传参方式吗？"><a href="#10-表单标签中可以控制传参方式吗？" class="headerlink" title="10. 表单标签中可以控制传参方式吗？"></a>10. 表单标签中可以控制传参方式吗？</h2><p>表单标签中的method属性决定这这个表单的传参方式（GET|POST）</p><h2 id="11-表单标签如果不写传参方式不写提交地址会如何？"><a href="#11-表单标签如果不写传参方式不写提交地址会如何？" class="headerlink" title="11. 表单标签如果不写传参方式不写提交地址会如何？"></a>11. 表单标签如果不写传参方式不写提交地址会如何？</h2><p>不写传参方式默认传参是GET，不写提交地址默认传参在当前文件</p><h2 id="12-PHP和HTML代码可以混合书写吗？"><a href="#12-PHP和HTML代码可以混合书写吗？" class="headerlink" title="12. PHP和HTML代码可以混合书写吗？"></a>12. PHP和HTML代码可以混合书写吗？</h2><p>当然可以，PHP和HTML可以混合书写</p><h2 id="13-有一些变量无法输出怎么办？"><a href="#13-有一些变量无法输出怎么办？" class="headerlink" title="13. 有一些变量无法输出怎么办？"></a>13. 有一些变量无法输出怎么办？</h2><p>我们可以使用var_dump()去查看其数据类型</p><h2 id="14-表单中的target属性有什么作用？"><a href="#14-表单中的target属性有什么作用？" class="headerlink" title="14. 表单中的target属性有什么作用？"></a>14. 表单中的target属性有什么作用？</h2><p>决定表单提交后究竟是新打开一个页面还是当前页面跳转</p><h2 id="15-什么是变量为空？"><a href="#15-什么是变量为空？" class="headerlink" title="15. 什么是变量为空？"></a>15. 什么是变量为空？</h2><p>$a = ‘’; $b =null ;$c = ‘123’; 在这个代码中只有变量b是空</p><h2 id="16-Stripos-怎么使用？"><a href="#16-Stripos-怎么使用？" class="headerlink" title="16. Stripos()怎么使用？"></a>16. Stripos()怎么使用？</h2><p>我们可以让这个函数去查找关键字，比如传参进行查询，如果查询到and什么的直接拦截</p><h2 id="17-Stripos-进行拦截可以用大小写绕过吗？"><a href="#17-Stripos-进行拦截可以用大小写绕过吗？" class="headerlink" title="17. Stripos() 进行拦截可以用大小写绕过吗？"></a>17. Stripos() 进行拦截可以用大小写绕过吗？</h2><p>这个函数不区分大小写，不能</p><h2 id="18-isset-有什么用？"><a href="#18-isset-有什么用？" class="headerlink" title="18. isset()有什么用？"></a>18. isset()有什么用？</h2><p>可以判断变量是不是存在且不为Null</p><h2 id="19-执行数据库语句用什么函数"><a href="#19-执行数据库语句用什么函数" class="headerlink" title="19. 执行数据库语句用什么函数"></a>19. 执行数据库语句用什么函数</h2><p>mysqli_query($conn,$sql)</p><h2 id="20-数组如何提取？"><a href="#20-数组如何提取？" class="headerlink" title="20. 数组如何提取？"></a>20. 数组如何提取？</h2><p>我们可以用中括号，$a = array(‘a’,’b’) ; $a[0]就是选中了a数组中的键值为0的数据 $a[0] 在这里就是字符串a</p><h2 id="21-is-numeric-函数所谓的必须是数字在意类型吗？"><a href="#21-is-numeric-函数所谓的必须是数字在意类型吗？" class="headerlink" title="21. is_numeric() 函数所谓的必须是数字在意类型吗？"></a>21. is_numeric() 函数所谓的必须是数字在意类型吗？</h2><p>并不在意，字符串类型的数字它也会返回Ture</p><h2 id="22-php中怎么判断是否相等"><a href="#22-php中怎么判断是否相等" class="headerlink" title="22. php中怎么判断是否相等?"></a>22. php中怎么判断是否相等?</h2><p>在php中一个等于是赋值，两个等于是比较是否相等，三个等于不仅仅会比较内容而且会比较类型</p><h2 id="23-遇到看不懂的函数怎么办？"><a href="#23-遇到看不懂的函数怎么办？" class="headerlink" title="23. 遇到看不懂的函数怎么办？"></a>23. 遇到看不懂的函数怎么办？</h2><p>查W3c和php官网还有菜鸟教程</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网安</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OverTheWire-Bandit 解题思路（一）</title>
    <link href="/2020/02/15/OverTheWire-Bandit/"/>
    <url>/2020/02/15/OverTheWire-Bandit/</url>
    
    <content type="html"><![CDATA[<h1 id="OverTheWire-Bandit-（Level-0-Level-6）"><a href="#OverTheWire-Bandit-（Level-0-Level-6）" class="headerlink" title="OverTheWire-Bandit （Level 0-Level 6）"></a>OverTheWire-Bandit （Level 0-Level 6）</h1><h2 id="Level-0"><a href="#Level-0" class="headerlink" title="Level 0"></a>Level 0</h2><p>这个级别的目标是使用SSH登录游戏。您需要连接的主机是 bandit.labs.overthewire.org，端口2220 用户名是 bandit0，密码是 bandit0。登录后，进入 1 级页面，了解如何击败1级。</p><p>我用的是 在虚拟机下使用Linux系统连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh -p 2220 bandit0@176.9.9.172<br></code></pre></td></tr></table></figure><p>连接成功，进入下一级</p><h2 id="Level-0-→-Level-1"><a href="#Level-0-→-Level-1" class="headerlink" title="Level 0 → Level 1"></a>Level 0 → Level 1</h2><p>描述：下一级别的密码存储在位于主目录中的名为 readme 的文件 中。</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit0@bandit:~$ ls<br>readme<br>bandit0@bandit:~$ cat readme <br>boJ9jbbUNNfktd78OOpsqOltutMc3MY1<br></code></pre></td></tr></table></figure><p>ls命令列出当前目录下的文件，而用 cat 命令查看文件内容</p><p>密码：boJ9jbbUNNfktd78OOpsqOltutMc3MY1</p><h2 id="Level-1-→-Level-2"><a href="#Level-1-→-Level-2" class="headerlink" title="Level 1 → Level 2"></a>Level 1 → Level 2</h2><p>用账号：bandit1 ，密码：boJ9jbbUNNfktd78OOpsqOltutMc3MY1 进入本关</p><p>描述：下一级的密码存储在一个名为 <strong>-</strong> ，位于主目录中的文件中</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit1@bandit:~$ ls<br>-<br>bandit1@bandit:~$ cat ./-<br>CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9<br></code></pre></td></tr></table></figure><p>文件名是: “-”，因为bash 中会用 “-” 来接受命令行参数，所以要用 “./” 来表示当前目录。</p><p>密码：CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9</p><h2 id="Level-2→-Level-3"><a href="#Level-2→-Level-3" class="headerlink" title="Level 2→ Level 3"></a>Level 2→ Level 3</h2><p>用账号：bandit2，密码：CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 进入本关</p><p>描述：下一级别的密码存储在位于主目录中的文件名为 spaces in this filename</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit2@bandit:~$ ls<br>spaces in this filename<br>bandit2@bandit:~$ cat spaces\ in\ this\ filename <br>UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK<br></code></pre></td></tr></table></figure><p>“ls” 查看文件，注意到 spaces in this filename 是一个文件，而不是四个，借助 Linux 自动补全的功能，输入 “cat s” 后，按一下 Tab 键就自动补全了</p><p>密码：UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK</p><h2 id="Level-3-→-Level-4"><a href="#Level-3-→-Level-4" class="headerlink" title="Level 3 → Level 4"></a>Level 3 → Level 4</h2><p>用账号：bandit3，密码：UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK 进入本关</p><p>描述：下一级别的密码存储在 inhere 目录中的隐藏文件中 。</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit3@bandit:~$ ls<br>inhere<br>bandit3@bandit:~$ cd inhere/<br>bandit3@bandit:~/inhere$ ls<br>bandit3@bandit:~/inhere$ ls -a<br>.  ..  .hidden<br>bandit3@bandit:~/inhere$ cat .hidden <br>pIwrPrtPN36QITSp3EQaw936yaFoFgAB<br></code></pre></td></tr></table></figure><p>“ls -a” 显示所有文件及目录 ， “.” 开头的文件为隐藏文件，故 “ls” 没有列出</p><p>密码：pIwrPrtPN36QITSp3EQaw936yaFoFgAB</p><h2 id="Level-4→-Level-5"><a href="#Level-4→-Level-5" class="headerlink" title="Level 4→ Level 5"></a>Level 4→ Level 5</h2><p>用账号：bandit4 ，密码：pIwrPrtPN36QITSp3EQaw936yaFoFgAB 进入本关</p><p>描述：下一级别的密码存储在 inhere 目录中唯一的人类可读文件中。提示：如果你的终端搞砸了，试试 “重置” 命令。</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit4@bandit:~$ ls<br>inhere<br>bandit4@bandit:~$ cd inhere/<br>bandit4@bandit:~/inhere$ ls<br>-file00  -file02  -file04  -file06  -file08<br>-file01  -file03  -file05  -file07  -file09<br>bandit4@bandit:~/inhere$ file ./*<br>./-file00: data<br>./-file01: data<br>./-file02: data<br>./-file03: data<br>./-file04: data<br>./-file05: data<br>./-file06: data<br>./-file07: ASCII text<br>./-file08: data<br>./-file09: data<br>bandit4@bandit:~/inhere$ cat ./-file07<br>koReBOKuIDDepwhWk7jZC0RTdopnAYKh<br></code></pre></td></tr></table></figure><p>inhere 文件夹中存在 10 个文件，用 Linux 的”file”命令辨识文件类型，”*” 是通配符，只有 “-file07″ 文件类型不一样。</p><p>密码：koReBOKuIDDepwhWk7jZC0RTdopnAYKh</p><h2 id="Level-5→-Level-6"><a href="#Level-5→-Level-6" class="headerlink" title="Level 5→ Level 6"></a>Level 5→ Level 6</h2><p>用账号：bandit5，密码：koReBOKuIDDepwhWk7jZC0RTdopnAYKh 进入本关</p><p>描述：下一级别的密码存储在 inhere 目录下的某个文件中，并具有以下所有属性：人类可读，大小为 1033 字节，不可执行</p><p>过程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">bandit5@bandit:~$ ls<br>inhere<br>bandit5@bandit:~$ cd inhere/<br>bandit5@bandit:~/inhere$ ls -l<br>total 80<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere00<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere01<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere02<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere03<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere04<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere05<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere06<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere07<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere08<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere09<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere10<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere11<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere12<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere13<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere14<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere15<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere16<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere17<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere18<br>drwxr-x--- 2 root bandit5 4096 Dec 28 14:34 maybehere19<br>bandit5@bandit:~/inhere$ find . -type f -size 1033c<br>./maybehere07/.file2<br>bandit5@bandit:~/inhere$ cat ./maybehere07/.file2<br>DXjZPULLxYr17uwoI01bNLQbtFemEgo7<br></code></pre></td></tr></table></figure><p>“ls -l” 列出文件型态、权限、拥有者、文件大小，发现有很多文件夹，”find . -type f -size 1033c”，”.” 查找当前目录以及子目录，-type f 指定文件类型为普通文件，-size 1033c 指定文件大小为 1033 bytes</p><p>密码：DXjZPULLxYr17uwoI01bNLQbtFemEgo7</p>]]></content>
    
    
    <categories>
      
      <category>靶场</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Web服务器通信原理</title>
    <link href="/2020/02/13/Web/"/>
    <url>/2020/02/13/Web/</url>
    
    <content type="html"><![CDATA[<h1 id="Web服务器通信原理"><a href="#Web服务器通信原理" class="headerlink" title="Web服务器通信原理"></a>Web服务器通信原理</h1><h2 id="一、基本知识介绍"><a href="#一、基本知识介绍" class="headerlink" title="一、基本知识介绍"></a>一、基本知识介绍</h2><h3 id="1-IP"><a href="#1-IP" class="headerlink" title="1.IP"></a>1.IP</h3><p>定义：互联网协议地址，缩写为IP地址，是分配给用户上网使用的网际协议的设备的数字标签。</p><p>理解：ip实际上就是地址，如果我想到你家去玩，那么我肯定要知道你家住在哪里，ip实际上就是你电脑的地址，在网络上可以通过ip来访问你的计算机。</p><p>ip有内网和公网的概念。什么是内网？什么是公网？</p><p>打个比方：</p><p>你家的门牌号那就是个公网地址，X省X市X街道X号，别人看到这个地址就能找到你家</p><p>内网地址是什么妮，假设你住的是一个大楼，比如住401房间，那么只有同一个大楼里面的人才能够通过401这个地址找到你的房间吧。其他人根本不知道是哪里的401房间对吧</p><p>公网地址是运营商分配的，内网地址是路由器分配的。</p><p>如何判断地址是公网还是内网呢？这些地址就是内网地址了</p><p>10.0.0.0<del>10.255.255.255 |172.16.0.0</del>172.31.255.255 |192.168.0.0~192.168.255.255</p><p>对于自己而言，如果你是本机访问本机，那么127.0.0.1或者localhost都代表着自己</p><h3 id="2-域名"><a href="#2-域名" class="headerlink" title="2.域名"></a>2.域名</h3><p>定义：域名实际上是为了方便记忆所发明的一个字符型标识</p><h3 id="3-DNS"><a href="#3-DNS" class="headerlink" title="3.DNS"></a>3.DNS</h3><p>定义：将域名转化为ip的一个协议</p><h3 id="4-端口"><a href="#4-端口" class="headerlink" title="4.端口"></a>4.端口</h3><p>端口就像电脑的接口，像USB接口，比如你需要用键盘时候，你要把键盘插入接口，端口就是类似的东西，端口主要是网络接口，比如你去访问别人网站，一般来说你实际上是去他的80端口进行通信。</p><p>我们有多少个端口？有范围是从0 到65535（2^16-1）</p><p>0端口是预留端口。一般不会用到</p><h3 id="5-MAC地址"><a href="#5-MAC地址" class="headerlink" title="5.MAC地址"></a>5.MAC地址</h3><p>网卡的物理地址通常是由网卡生产厂家烧入网卡(全球唯一性) 可以伪造</p><h3 id="6-HTTP协议"><a href="#6-HTTP协议" class="headerlink" title="6.HTTP协议"></a>6.HTTP协议</h3><p>超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法，基本*问网站都是使用HTTP协议</p><p>HTTP协议我们来看看需要了解什么，我们拿一个HTTP通信数据包来讲解</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">GET /?tn=62095104_26_oem_dg HTTP/1.1<br>Host: baidu.com<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko)<br>Chrome/69.0.3497.100 Safari/537.36<br>Cookie:BAIDUID=73B3EA8C6CE97FA3AEA1C885FECA03A9:FG=1; BIDUPSID=73B3EA8C6CE97FA3AEA1C885FECA03A9; PSTM=1558791249<br></code></pre></td></tr></table></figure><p>GET 是请求方式 HTTP/1.1 是协议版本 HOST是访问的域名 User-Agent传参是传参告诉别人你的浏览器是什么，是什么系统呀。Cookie就是一个用户的凭证。就是代表你的身份，比如你登陆后，那串Cookie被人窃取了，那么利用那串Cookie，他就可以直接有你账号登陆的权限。</p><h2 id="二、网页浏览流程"><a href="#二、网页浏览流程" class="headerlink" title="二、网页浏览流程"></a>二、网页浏览流程</h2><h3 id="1-从访客角度看网页浏览流程"><a href="#1-从访客角度看网页浏览流程" class="headerlink" title="1.从访客角度看网页浏览流程"></a>1.从访客角度看网页浏览流程</h3><p>1.1.1.1 baidu.com → 网关 →DNS表，qzone.qq.com→ IP web服务器</p><p>（1）用户在浏览器输入协议://域名，如 <a href="http://www.zkaq.org/">http://www.zkaq.org</a></p><p>（2）用户浏览器通过系统 → 向DNS服务器查询域名对应的IP地址</p><p>（3）用户浏览器向查询到的IP地址(Web服务器)发起HTTP请求</p><p>（4）服务器分析用户请求，从中提取数据，处理后返回一个http响应</p><p>（5）浏览器收到响应后提取状态、协议编码、正文的有效信息，然后翻译成人类能够直观理解的图形界面并显示。</p><h3 id="2-常见的服务器系统"><a href="#2-常见的服务器系统" class="headerlink" title="2.常见的服务器系统"></a>2.常见的服务器系统</h3><ul><li><p>Linux</p></li><li><p>Windows Server</p></li><li><p>macOS Server</p></li></ul><p><strong>看到盘符一定是WINDOWS，看到/开头一般都是LIUNX(毕竟拿macOS做系统很罕见)</strong></p><h3 id="3-相对路径和绝对路径"><a href="#3-相对路径和绝对路径" class="headerlink" title="3.相对路径和绝对路径"></a>3.相对路径和绝对路径</h3><h4 id="（1）绝对路径"><a href="#（1）绝对路径" class="headerlink" title="（1）绝对路径"></a>（1）绝对路径</h4><p>先说在本地计算机上，文件的绝对路径当然是指：文件在硬盘上真正存在的路径。</p><p>例如：<code>C:\Users\Admin.android\avd</code> （看到盘符就绝对是WINDOWS绝对路径了）</p><p>​           <code>/etc/init/</code> (看到/开头就是liunx的绝对路径了)</p><h4 id="（2）相对路径"><a href="#（2）相对路径" class="headerlink" title="（2）相对路径"></a>（2）相对路径</h4><p>相对路径，顾名思义就是自己相对与目标位置。</p><p>假设 你要引入文件的页面名称为test.htm，它存在叫www的文件夹里（绝对路径<code>D:/wamp/www/test.htm</code>）</p><p>那么引用同时存在www文件夹里的“icon.jpg”文件（绝对路径<code>D:/wamp/www/icon.jpg</code>)</p><p>同一目录下相对路径icon.jpg （<code>./icon.jpg ../</code>）</p><p>如果文件“icon.jpg”存在img文文件夹中（绝对路径<code>D:/wamp/www/img/icon.jpg</code>),那么相对路径<code>./img/icon.jpg</code>。</p><h2 id="三、Web服务器理解"><a href="#三、Web服务器理解" class="headerlink" title="三、Web服务器理解"></a>三、Web服务器理解</h2><p><strong>Web容器</strong></p><p>Web容器是可以向发出请求的浏览器提供文档的程序。</p><p>Web容器是一种被动程序：只有其他计算机发出的请求该容器时，容器才会响应</p><p>Web容器的主要功能是存储，处理和传递网页给客户。客户端和服务器之间的通信使用超文本传输协议（HTTP）进行。交付的页面最常见的是HTML文档，除了文本内容之外，还可能包含图像，样式表和脚本。</p><p>常见Web容器</p><p>IIS(Windows)</p><p>Apache(全平台)</p><p>Nginx(全平台)</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
